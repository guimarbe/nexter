@charset "UTF-8";
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  box-sizing: border-box;
  font-size: 62.50%; }
  @media only screen and (max-width: 75em) {
    html {
      font-size: 50%; } }

body {
  font-family: "Nunito", sans-serif;
  font-weight: 300;
  line-height: 1.6;
  color: #6D5D4B; }

.heading-1, .heading-2, .heading-3, .heading-4 {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 400; }

.heading-1 {
  font-size: 4.5rem;
  color: #f9f7f6;
  line-height: 1; }

.heading-2 {
  font-size: 4rem;
  font-style: italic;
  line-height: 1; }
  .heading-2--light {
    color: #f9f7f6; }
  .heading-2--dark {
    color: #aaa; }

.heading-3 {
  font-size: 1.6rem;
  color: #c69963;
  text-transform: uppercase; }

.heading-4 {
  font-size: 1.9rem; }
  .heading-4--light {
    color: #f9f7f6; }
  .heading-4--dark {
    color: #54483A; }

.mb-xs {
  margin-bottom: 1rem; }

.mb-sm {
  margin-bottom: 2rem; }

.mb-md {
  margin-bottom: 3rem; }

.mb-lg {
  margin-bottom: 4rem; }

.mb-xl {
  margin-bottom: 8rem; }

.btn {
  background-color: #c69963;
  color: #fff;
  border-radius: 0;
  border: none;
  font-family: "Josefin Sans", sans-serif;
  font-size: 1.5rem;
  text-transform: uppercase;
  padding: 1.8rem 3rem;
  cursor: pointer;
  transition: all .2s; }
  .btn:hover {
    background-color: #B28451; }

.container {
  display: grid;
  grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
  /*	Hemos creado 6 filas: la primera con el 80% de la altura de la pantalla,
	*	La segunda con el mínimo del contenido, la tercera con el 40% del ancho
	*	de la pantalla y las tres últimas de su contenido.
	**/
  grid-template-columns: [sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];
  /*	Generamos 8 columnas iguales con 1140px/8col = 142.5px -> 14rem aprox.
	*	Tenemos, en total, la columna del sidebar, las 8 del container y 2 más
	*	que sirven para mantener el equilibrio del 100% del viewport.
	*
	*	Nota: nombramos solo las columnas, porque la web va a ser adaptativa por
	*	su ancho de pantalla, no por sus filas.
	*/ }
  @media only screen and (max-width: 62.5em) {
    .container {
      display: grid;
      grid-template-rows: 6rem 80vh min-content 40vw repeat(3, min-content);
      grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end]; } }
  @media only screen and (max-width: 50em) {
    .container {
      display: grid;
      grid-template-rows: 6rem calc(100vh - 6rem);
      /*	Hemos añadido una fila más y hemos usado calc() para establecer que el header
		*	sea igual de alto que la pantalla del dispositivo, menos los 6rem de la barra de navegación,
		*	ya que si no lo hacemos, al hacer scroll aún seguiriamos viendo el header restante.
		**/ } }

.header {
  background-color: #54483A;
  background-image: linear-gradient(rgba(16, 29, 44, 0.9), rgba(16, 29, 44, 0.9)), url(../img/hero.jpeg);
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;
  grid-column: full-start / col-end 6;
  display: grid;
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
  grid-template-columns: minmax(min-content, max-content);
  grid-row-gap: 1.5rem;
  justify-content: center;
  /*	Hay que fijarse en las dimensiones del .container a la hora de maquetar
	*	el propio .header.
	*/ }
  @media only screen and (max-width: 50em) {
    .header {
      grid-column: 1 / -1;
      /*	Esto es para hacer que el header ocupe todo el ancho y realtors baje
		*	debajo del header.
		**/ } }
  @media only screen and (max-width: 37.5em) {
    .header {
      padding: 5rem; } }
  .header__logo {
    height: 3rem;
    justify-self: center; }
  .header__btn {
    align-self: start;
    justify-self: start; }
  .header__seenon-text {
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;
    font-size: 1.6rem;
    color: #aaa; }
    .header__seenon-text::before, .header__seenon-text::after {
      content: "";
      height: 1px;
      display: block;
      background-color: currentColor; }
  .header__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 3rem;
    justify-items: center;
    align-items: center; }
    .header__seenon-logos img {
      max-height: 2.5rem;
      max-width: 100%;
      filter: brightness(70%); }

.footer {
  background-color: #101d2c;
  grid-column: full-start / full-end;
  padding: 8rem; }

.nav {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
  grid-gap: 2rem;
  align-items: center; }
  .nav__link:link, .nav__link:visited {
    display: block;
    font-family: "Josefin Sans", sans-serif;
    font-size: 1.4rem;
    text-decoration: none;
    text-transform: uppercase;
    text-align: center;
    color: #fff;
    background-color: rgba(255, 255, 255, 0.05);
    padding: 1.5rem; }
  .nav__link:hover, .nav__link:active {
    background-color: rgba(255, 255, 255, 0.05);
    transform: translateY(-0.3rem); }

.copyright {
  font-size: 1.4rem;
  color: #aaa;
  width: 70%;
  margin-top: 6rem;
  margin-left: auto;
  margin-right: auto;
  text-align: center; }

.sidebar {
  background-color: #c69963;
  grid-column: sidebar-start / sidebar-end;
  grid-row: 1 / -1;
  display: flex;
  justify-content: center; }
  @media only screen and (max-width: 62.5em) {
    .sidebar {
      grid-column: 1 / -1;
      grid-row: 1 / 2;
      justify-content: flex-end;
      align-items: center; } }

.nav-btn {
  border-radius: none;
  border-radius: 0;
  background-color: #fff;
  height: 2px;
  width: 4.5rem;
  margin-top: 4rem; }
  .nav-btn::before, .nav-btn::after {
    background-color: #fff;
    height: 2px;
    width: 4.5rem;
    content: "";
    display: block; }
  .nav-btn::before {
    transform: translate(-0.2rem, -1.5rem); }
  .nav-btn::after {
    transform: translate(-0.2rem, 1rem); }
  @media only screen and (max-width: 62.5em) {
    .nav-btn {
      margin-top: 0;
      margin-right: 3rem; }
      .nav-btn::before {
        transform: translate(-0.2rem, -1.2rem); }
      .nav-btn::after {
        transform: translate(-0.2rem, 0.7rem); } }

.realtors {
  background-color: #101d2c;
  padding: 3rem;
  grid-column: col-start 7 / full-end;
  display: grid;
  align-content: center;
  grid-row-gap: 2rem;
  justify-items: center; }
  @media only screen and (max-width: 50em) {
    .realtors {
      grid-column: 1 / -1; } }
  @media only screen and (max-width: 37.5em) {
    .realtors {
      padding: 5rem; } }
  .realtors__list {
    display: grid;
    grid-template-columns: min-content max-content;
    grid-column-gap: 2rem;
    grid-row-gap: 5vh;
    align-items: center; }
    @media only screen and (max-width: 50em) {
      .realtors__list {
        grid-template-columns: repeat(3, min-content max-content);
        margin-bottom: 2.5rem; } }
    @media only screen and (max-width: 37.5em) {
      .realtors__list {
        grid-template-columns: min-content max-content;
        margin-bottom: 0; } }
  .realtors__img {
    width: 7rem;
    border-radius: 50%;
    display: block; }
  .realtors__sold {
    text-transform: uppercase;
    color: #aaa;
    margin-top: -3px; }

.features {
  grid-column: center-start / center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 6rem;
  align-items: start; }

.feature {
  display: grid;
  grid-template-columns: min-content 1fr;
  grid-row-gap: 1.5rem;
  grid-column-gap: 2.5rem; }
  .feature__icon {
    height: 4.5rem;
    width: 4.5rem;
    fill: #c69963;
    grid-row: 1 / span 2;
    transform: translateY(-1rem); }
  .feature__text {
    font-size: 1.7rem; }

.story__pictures {
  background-color: #c69963;
  grid-column: full-start / col-end 4;
  background-image: linear-gradient(rgba(198, 153, 99, 0.5), rgba(198, 153, 99, 0.5)), url(../img/back.jpg);
  background-size: cover;
  display: grid;
  grid-template-rows: repeat(6, 1fr);
  grid-template-columns: repeat(6, 1fr);
  align-items: center; }
  @media only screen and (max-width: 50em) {
    .story__pictures {
      grid-column: 1 / -1;
      padding: 6rem; } }

.story__img--1 {
  width: 100%;
  grid-row: 2 / 6;
  grid-column: 2 / 6;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.1); }
  @media only screen and (max-width: 50em) {
    .story__img--1 {
      grid-column: 1 / 5;
      grid-row: 1 / -1; } }

.story__img--2 {
  width: 115%;
  grid-row: 4 / 6;
  grid-column: 4 / 7;
  box-shadow: 0 2rem 5rem rgba(0, 0, 0, 0.2);
  z-index: 5; }
  @media only screen and (max-width: 50em) {
    .story__img--2 {
      width: 100%;
      grid-row: 1 / -1; } }

.story__content {
  background-color: #f9f7f6;
  grid-column: col-start 5 / full-end;
  padding: 6rem 8vw;
  /*
		display: flex; // Vamos a usar flexbox conjuntamente con grid
		flex-direction: column;
		justify-content: center;
		align-items: flex-start;
		*/
  display: grid;
  align-content: center;
  justify-items: start; }
  @media only screen and (max-width: 50em) {
    .story__content {
      grid-column: 1 / -1;
      grid-row: 5 / 6; } }

.story__text {
  font-size: 1.5rem;
  font-style: italic;
  margin-bottom: 4rem; }

.homes {
  grid-column: center-start / center-end;
  margin: 15rem 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
  grid-gap: 7rem; }

.home {
  background-color: #f9f7f6;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-row-gap: 3.5rem;
  /*	Como no se puede alterar el tamaño del primer row-gap, la solución más
	*	fácil es añadir un margin a los primeros iconos de .home
	**/ }
  .home__img {
    width: 100%;
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    z-index: 1; }
  .home__like {
    fill: #c69963;
    height: 2.5rem;
    width: 2.5rem;
    margin: 1rem;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
    justify-self: end;
    z-index: 2; }
  .home__name {
    width: 80%;
    font-family: "Josefin Sans", sans-serif;
    font-size: 1.6rem;
    font-weight: 400;
    text-align: center;
    padding: 1.25rem;
    color: #fff;
    background-color: #101d2c;
    grid-row: 1 / 2;
    grid-column: 1 / -1;
    justify-self: center;
    align-self: end;
    z-index: 2;
    transform: translateY(50%); }
  .home__location, .home__rooms {
    margin-top: 2.5rem; }
  .home__location, .home__rooms, .home__area, .home__price {
    font-size: 1.5rem;
    margin-left: 2rem;
    display: flex;
    align-items: center; }
    .home__location svg, .home__rooms svg, .home__area svg, .home__price svg {
      fill: #c69963;
      height: 2rem;
      width: 2rem;
      margin-right: 1rem; }
  .home__button {
    grid-column: 1 / -1; }

.gallery {
  background-color: #f9f7f6;
  grid-column: full-start / full-end;
  display: grid;
  grid-template-rows: repeat(7, 5vw);
  grid-template-columns: repeat(8, 1fr);
  grid-gap: 1.5rem;
  padding: 1.5rem;
  /*	El truco para crear la galería de imágenes es establecer bien los parámetros
	*	de .gallery__img y, a partir de aquí, jugar con los tamaños de filas
	*	y columnas de cada elemento en .gallery__item. Esto se ve mejor si usamos
	*	la disposición rejilla de Firefox Quantum.
	*	Por desgracia, no es muy adaptativa a móviles: el gap se hace gigante y
	*	las imágenes diminutas.
	**/ }
  .gallery__item--1 {
    grid-row: 1 / span 2;
    grid-column: 1 / span 2; }
  .gallery__item--2 {
    grid-row: 1 / span 3;
    grid-column: 3 / span 3; }
  .gallery__item--3 {
    grid-row: 1 / span 2; }
  .gallery__item--4 {
    grid-row: 1 / span 2;
    grid-column: 7 / span 2; }
  .gallery__item--5 {
    grid-row: 3 / span 3;
    grid-column: 1 / span 2; }
  .gallery__item--6 {
    grid-row: 4 / span 2;
    grid-column: 3 / span 2; }
  .gallery__item--8 {
    grid-row: 3 / span 2;
    grid-column: 6 / span 2; }
  .gallery__item--9 {
    grid-row: 3 / span 3; }
  .gallery__item--10 {
    grid-row: 6 / span 2; }
  .gallery__item--11 {
    grid-row: 6 / span 2;
    grid-column: 2 / span 2; }
  .gallery__item--12 {
    grid-row: 6 / span 2; }
  .gallery__item--13 {
    grid-row: 5 / span 3;
    grid-column: 5 / span 3; }
  .gallery__item--14 {
    grid-row: 6 / span 2; }
  .gallery__img {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover; }
